# 1 "lexer.mll"
 
  open Parser
  exception Error of string

# 7 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\234\255\235\255\026\000\026\000\045\000\042\000\049\000\
    \243\255\034\000\049\000\057\000\058\000\248\255\249\255\059\000\
    \251\255\252\255\052\000\057\000\255\255\238\255\061\000\044\000\
    \046\000\254\255\053\000\253\255\050\000\250\255\048\000\050\000\
    \005\000\062\000\059\000\071\000\070\000\075\000\056\000\247\255\
    \059\000\008\000\070\000\066\000\078\000\077\000\082\000\063\000\
    \246\255\080\000\065\000\069\000\074\000\084\000\245\255\076\000\
    \241\255\090\000\078\000\090\000\089\000\244\255\242\255\076\000\
    \091\000\240\255\088\000\086\000\094\000\239\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\019\000\018\000\021\000\021\000\021\000\
    \255\255\021\000\021\000\021\000\021\000\255\255\255\255\021\000\
    \255\255\255\255\021\000\021\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\000\000\000\000\255\255\
    \000\000\000\000\255\255\255\255\000\000\000\000\255\255\255\255\
    \255\255\000\000\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\255\255\255\255\255\255\255\255\000\000\000\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\020\000\020\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \014\000\013\000\000\000\017\000\000\000\016\000\000\000\000\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\000\000\020\000\000\000\008\000\000\000\000\000\
    \000\000\009\000\011\000\000\000\019\000\006\000\018\000\000\000\
    \012\000\007\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\010\000\033\000\015\000\005\000\
    \042\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\066\000\063\000\062\000\
    \057\000\049\000\040\000\030\000\028\000\026\000\022\000\023\000\
    \050\000\024\000\025\000\027\000\029\000\031\000\032\000\034\000\
    \021\000\035\000\036\000\037\000\038\000\039\000\041\000\043\000\
    \044\000\045\000\046\000\047\000\048\000\055\000\051\000\052\000\
    \053\000\054\000\056\000\058\000\059\000\060\000\061\000\064\000\
    \065\000\067\000\068\000\069\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\000\000\255\255\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\000\000\000\000\255\255\000\000\000\000\000\000\255\255\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\000\000\032\000\000\000\000\000\
    \041\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\005\000\006\000\007\000\
    \009\000\010\000\011\000\012\000\015\000\018\000\019\000\022\000\
    \010\000\023\000\024\000\026\000\028\000\030\000\031\000\033\000\
    \019\000\034\000\035\000\036\000\037\000\038\000\040\000\042\000\
    \043\000\044\000\045\000\046\000\047\000\049\000\050\000\051\000\
    \052\000\053\000\055\000\057\000\058\000\059\000\060\000\063\000\
    \064\000\066\000\067\000\068\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec main lexbuf =
   __ocaml_lex_main_rec lexbuf 0
and __ocaml_lex_main_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 10 "lexer.mll"
                      (main lexbuf)
# 150 "lexer.ml"

  | 1 ->
# 11 "lexer.mll"
                    (DEB)
# 155 "lexer.ml"

  | 2 ->
# 12 "lexer.mll"
                    (FIN)
# 160 "lexer.ml"

  | 3 ->
# 13 "lexer.mll"
                    (PLUS)
# 165 "lexer.ml"

  | 4 ->
# 14 "lexer.mll"
                    (MOINS)
# 170 "lexer.ml"

  | 5 ->
# 15 "lexer.mll"
                    (VAR)
# 175 "lexer.ml"

  | 6 ->
# 16 "lexer.mll"
                    (LPAR)
# 180 "lexer.ml"

  | 7 ->
# 17 "lexer.mll"
                    (RPAR)
# 185 "lexer.ml"

  | 8 ->
# 18 "lexer.mll"
                    (HPINCEAU)
# 190 "lexer.ml"

  | 9 ->
# 19 "lexer.mll"
                    (BPINCEAU)
# 195 "lexer.ml"

  | 10 ->
# 20 "lexer.mll"
                    (TOURNE)
# 200 "lexer.ml"

  | 11 ->
# 21 "lexer.mll"
                    (AVANCE)
# 205 "lexer.ml"

  | 12 ->
# 22 "lexer.mll"
                    (EGAL)
# 210 "lexer.ml"

  | 13 ->
# 23 "lexer.mll"
                    (IF)
# 215 "lexer.ml"

  | 14 ->
# 24 "lexer.mll"
                    (THEN)
# 220 "lexer.ml"

  | 15 ->
# 25 "lexer.mll"
                    (ELSE)
# 225 "lexer.ml"

  | 16 ->
# 26 "lexer.mll"
                     (WHILE)
# 230 "lexer.ml"

  | 17 ->
# 27 "lexer.mll"
                     (DO)
# 235 "lexer.ml"

  | 18 ->
let
# 28 "lexer.mll"
                   i
# 241 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 28 "lexer.mll"
                        (IDENT i)
# 245 "lexer.ml"

  | 19 ->
let
# 29 "lexer.mll"
           n
# 251 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 29 "lexer.mll"
                         (NB (int_of_string n))
# 255 "lexer.ml"

  | 20 ->
# 30 "lexer.mll"
                     (EOF)
# 260 "lexer.ml"

  | 21 ->
# 31 "lexer.mll"
                    (failwith "unexpected character")
# 265 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_main_rec lexbuf __ocaml_lex_state

;;

