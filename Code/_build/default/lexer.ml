# 1 "lexer.mll"
 
  open Parser
  exception Error of string

# 7 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\230\255\231\255\232\255\025\000\075\000\029\000\029\000\
    \241\255\090\000\102\000\038\000\039\000\246\255\247\255\040\000\
    \249\255\250\255\251\255\252\255\104\000\037\000\255\255\041\000\
    \049\000\051\000\254\255\063\000\059\000\253\255\056\000\070\000\
    \236\255\086\000\248\255\085\000\087\000\005\000\099\000\095\000\
    \107\000\106\000\113\000\094\000\245\255\097\000\007\000\109\000\
    \105\000\117\000\116\000\121\000\102\000\244\255\110\000\104\000\
    \108\000\113\000\123\000\243\255\109\000\001\000\113\000\110\000\
    \127\000\237\255\118\000\133\000\121\000\133\000\132\000\242\255\
    \120\000\120\000\239\255\126\000\126\000\128\000\238\255\142\000\
    \130\000\138\000\141\000\002\000\131\000\133\000\128\000\138\000\
    \146\000\131\000\135\000\235\255\153\000\146\000\137\000\138\000\
    \153\000\138\000\143\000\234\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\023\000\022\000\025\000\025\000\
    \255\255\025\000\025\000\025\000\025\000\255\255\255\255\025\000\
    \255\255\255\255\255\255\255\255\025\000\025\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\015\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\000\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\000\000\000\000\255\255\
    \000\000\000\000\000\000\000\000\255\255\255\255\000\000\255\255\
    \255\255\255\255\000\000\255\255\255\255\000\000\255\255\255\255\
    \000\000\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\000\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\022\000\022\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \022\000\062\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \014\000\013\000\017\000\019\000\000\000\018\000\000\000\016\000\
    \003\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\000\000\022\000\000\000\008\000\000\000\000\000\
    \000\000\009\000\011\000\006\000\021\000\085\000\020\000\084\000\
    \012\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\007\000\010\000\038\000\015\000\047\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\079\000\075\000\045\000\
    \035\000\033\000\023\000\024\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\025\000\026\000\
    \030\000\029\000\031\000\032\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\066\000\054\000\
    \034\000\027\000\036\000\037\000\039\000\040\000\041\000\042\000\
    \067\000\028\000\043\000\044\000\046\000\055\000\048\000\049\000\
    \050\000\051\000\052\000\053\000\060\000\056\000\057\000\058\000\
    \059\000\061\000\063\000\064\000\065\000\072\000\068\000\069\000\
    \070\000\071\000\073\000\074\000\076\000\077\000\078\000\080\000\
    \081\000\082\000\083\000\092\000\086\000\087\000\088\000\089\000\
    \090\000\091\000\093\000\094\000\095\000\096\000\097\000\098\000\
    \002\000\099\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\061\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\083\000\000\000\083\000\
    \000\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\000\000\000\000\037\000\000\000\046\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\006\000\007\000\011\000\
    \012\000\015\000\021\000\023\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\024\000\025\000\
    \027\000\028\000\030\000\031\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\009\000\010\000\
    \033\000\020\000\035\000\036\000\038\000\039\000\040\000\041\000\
    \009\000\020\000\042\000\043\000\045\000\010\000\047\000\048\000\
    \049\000\050\000\051\000\052\000\054\000\055\000\056\000\057\000\
    \058\000\060\000\062\000\063\000\064\000\066\000\067\000\068\000\
    \069\000\070\000\072\000\073\000\075\000\076\000\077\000\079\000\
    \080\000\081\000\082\000\084\000\085\000\086\000\087\000\088\000\
    \089\000\090\000\092\000\093\000\094\000\095\000\096\000\097\000\
    \000\000\098\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec main lexbuf =
   __ocaml_lex_main_rec lexbuf 0
and __ocaml_lex_main_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 12 "lexer.mll"
                      (main lexbuf)
# 178 "lexer.ml"

  | 1 ->
# 13 "lexer.mll"
                    (DEB)
# 183 "lexer.ml"

  | 2 ->
# 14 "lexer.mll"
                    (FIN)
# 188 "lexer.ml"

  | 3 ->
# 15 "lexer.mll"
                    (PLUS)
# 193 "lexer.ml"

  | 4 ->
# 16 "lexer.mll"
                    (MOINS)
# 198 "lexer.ml"

  | 5 ->
# 17 "lexer.mll"
                    (MULT)
# 203 "lexer.ml"

  | 6 ->
# 18 "lexer.mll"
                    (DIV)
# 208 "lexer.ml"

  | 7 ->
# 19 "lexer.mll"
                    (VAR)
# 213 "lexer.ml"

  | 8 ->
# 20 "lexer.mll"
                    (LPAR)
# 218 "lexer.ml"

  | 9 ->
# 21 "lexer.mll"
                    (RPAR)
# 223 "lexer.ml"

  | 10 ->
# 22 "lexer.mll"
                    (HPINCEAU)
# 228 "lexer.ml"

  | 11 ->
# 23 "lexer.mll"
                    (BPINCEAU)
# 233 "lexer.ml"

  | 12 ->
# 24 "lexer.mll"
                    (TOURNE)
# 238 "lexer.ml"

  | 13 ->
# 25 "lexer.mll"
                    (AVANCE)
# 243 "lexer.ml"

  | 14 ->
# 26 "lexer.mll"
                    (EGAL)
# 248 "lexer.ml"

  | 15 ->
# 27 "lexer.mll"
                    (SI)
# 253 "lexer.ml"

  | 16 ->
# 28 "lexer.mll"
                     (ALORS)
# 258 "lexer.ml"

  | 17 ->
# 29 "lexer.mll"
                     (SINON)
# 263 "lexer.ml"

  | 18 ->
# 30 "lexer.mll"
                        (TANTQ)
# 268 "lexer.ml"

  | 19 ->
# 31 "lexer.mll"
                        (FAIRE)
# 273 "lexer.ml"

  | 20 ->
# 32 "lexer.mll"
                              (COUL)
# 278 "lexer.ml"

  | 21 ->
# 33 "lexer.mll"
                        (EP)
# 283 "lexer.ml"

  | 22 ->
let
# 34 "lexer.mll"
                                    i
# 289 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 34 "lexer.mll"
                                         (IDENT i)
# 293 "lexer.ml"

  | 23 ->
let
# 35 "lexer.mll"
                              n
# 299 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 35 "lexer.mll"
                                            (NB (int_of_string n))
# 303 "lexer.ml"

  | 24 ->
# 36 "lexer.mll"
                     (EOF)
# 308 "lexer.ml"

  | 25 ->
# 37 "lexer.mll"
                  (failwith ("mot inconnu"))
# 313 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_main_rec lexbuf __ocaml_lex_state

;;

